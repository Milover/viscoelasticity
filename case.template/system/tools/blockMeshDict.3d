/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system/tools";
    object      blockMeshDict.3d;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// NOTE: v2112 onwards
//#message "Using 3D mesh config";

// * * * * * * * * * * * * * * * * Geometry  * * * * * * * * * * * * * * * * //

// O-grid inner square side length to pipe radius ratio
h		#eval{ 1.0/2.0 };
// O-grid inner quadrangle max height to pipe radius ratio
H		#eval{ 3.1/5.0 };

// * * * * * * * * * * * * * * * * * Mesh  * * * * * * * * * * * * * * * * * //

// axial cell expansion ratio, inlet/outlet
exR_Z	1.01;
// radial cell expansion ratio
exR_R	1.01;

// No. cells inlet/outlet in axial dir.
ncL		#eval{ round(log(1 - $L*(1 - $exR_Z)/(2*$b/$:ncZ) ) / log($exR_Z)) };

//// inlet cell exp. ratio in axial dir.
//grZ_o	#eval{ pow($exR_Z, $ncL - 1) };
//// outlet cell exp. ratio in axial dir.
//grZ_i	#eval{ 1/$grZ_o };
//// radial cell exp. ratio
//grR	    #eval{ pow($exR_R, 1 - $:ncR) };

grZ_o 1;
grZ_i 1;
grR   1;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

/* NOTE:
 * 	The mesh is built (1/8 of the geometry w/o inlet/outlet lengths) but there
 * 	is an issue with continuity between the two annular blocks. Continuity,
 * 	i.e., tangency, is kept only where the arcs are explicitly specified, but
 * 	along the stenosis the continuity is broken, i.e., the two arcs which form
 * 	the wall patch are no longer tangential to each other. The non-continuity
 * 	is especially visible near the stenosis inflection point, close to the
 * 	apex of the stenosis.
 *
 * 	The continuity can be reduced by adding more blocks in the axial direction,
 * 	although, generalizing this to an arbitrary number of blocks would require
 * 	external scripting, which defeats the purpose of this approach.
 * 	Hence, only 2 axial blocks are used, as this seems acceptable for our
 * 	purposes, at least for the time being.
 */

scale		1;

vertices
(
	#eval{vector(      0,                                                0,                                       -($R - $a) )}	// 0
	#eval{vector( 0.2*$b,                                                0,             -($R - 0.5*$a * (1 + cos(0.2*pi()))) )}	// 1
	#eval{vector(     $b,                                                0,                                              -$R )}	// 2
	#eval{vector(      0,                            ($R - $a)*cos(pi()/4),                           -($R - $a)*sin(pi()/4) )}	// 3
	#eval{vector( 0.2*$b,  ($R - 0.5*$a * (1 + cos(0.2*pi())))*cos(pi()/4), -($R - 0.5*$a * (1 + cos(0.2*pi())))*sin(pi()/4) )}	// 4
	#eval{vector(     $b,                                   $R*cos(pi()/4),                                  -$R*sin(pi()/4) )}	// 5
	#eval{vector(      0,                                                0,                                    -$H*($R - $a) )}	// 6
	#eval{vector( 0.2*$b,                                                0,          -$H*($R - 0.5*$a * (1 + cos(0.2*pi()))) )}	// 7
	#eval{vector(     $b,                                                0,                                           -$H*$R )}	// 8
	#eval{vector(      0,                                     $h*($R - $a),                                    -$h*($R - $a) )}	// 9
	#eval{vector( 0.2*$b,           $h*($R - 0.5*$a * (1 + cos(0.2*pi()))),          -$h*($R - 0.5*$a * (1 + cos(0.2*pi()))) )}	// 10
	#eval{vector(     $b,                                            $h*$R,                                           -$h*$R )}	// 11
	#eval{vector(      0,                                                0,                                                0 )}	// 12
	#eval{vector( 0.2*$b,                                                0,                                                0 )}	// 13
	#eval{vector(     $b,                                                0,                                                0 )}	// 14
	#eval{vector(      0,                                     $H*($R - $a),                                                0 )}	// 15
	#eval{vector( 0.2*$b,           $H*($R - 0.5*$a * (1 + cos(0.2*pi()))),                                                0 )}	// 16
	#eval{vector(     $b,                                            $H*$R,                                                0 )}	// 17
	#eval{vector(      0,                                          $R - $a,                                                0 )}	// 18
	#eval{vector( 0.2*$b,              ($R - 0.5*$a * (1 + cos(0.2*pi()))),                                                0 )}	// 19
	#eval{vector(     $b,                                               $R,                                                0 )}	// 20
);

// FIXME: no. cells and scaling
blocks
(
	// annulus z
	hex ( 0  1  4  3  6  7 10  9)     ($:ncZ $:ncR $:ncR) simpleGrading #eval{vector(1, $grR, 1/$grR)}
	hex ( 1  2  5  4  7  8 11 10)     ($:ncZ $:ncR $:ncR) simpleGrading #eval{vector(1, $grR, 1/$grR)}

	// annulus y
	hex ( 9 10  4  3 15 16 19 18)     ($:ncZ $:ncR $:ncR) simpleGrading #eval{vector(1, $grR, 1/$grR)}
	hex (10 11  5  4 16 17 20 19)     ($:ncZ $:ncR $:ncR) simpleGrading #eval{vector(1, $grR, 1/$grR)}

	// inner
	hex ( 6  7 10  9 12 13 16 15)     ($:ncZ $:ncR $:ncR) simpleGrading #eval{vector(1, $grR, 1/$grR)}
	hex ( 7  8 11 10 13 14 17 16)     ($:ncZ $:ncR $:ncR) simpleGrading #eval{vector(1, $grR, 1/$grR)}
);

edges
(
	spline  0  1
	(
		#eval{vector(        0,                                                    0,                                           -($R - $a) )}

		#eval{vector(  0.05*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.05*pi()))) )}
		#eval{vector(  0.10*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.10*pi()))) )}
		#eval{vector(  0.15*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.15*pi()))) )}

		#eval{vector(  0.20*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.20*pi()))) )}
	)
	spline  1  2
	(
		#eval{vector(  0.20*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.20*pi()))) )}

		#eval{vector(  0.25*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.25*pi()))) )}
		#eval{vector(  0.30*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.30*pi()))) )}
		#eval{vector(  0.35*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.35*pi()))) )}
		#eval{vector(  0.40*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.40*pi()))) )}
		#eval{vector(  0.45*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.45*pi()))) )}
		#eval{vector(  0.50*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.50*pi()))) )}
		#eval{vector(  0.55*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.55*pi()))) )}
		#eval{vector(  0.60*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.60*pi()))) )}
		#eval{vector(  0.65*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.65*pi()))) )}
		#eval{vector(  0.70*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.70*pi()))) )}
		#eval{vector(  0.75*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.75*pi()))) )}
		#eval{vector(  0.80*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.80*pi()))) )}
		#eval{vector(  0.85*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.85*pi()))) )}
		#eval{vector(  0.90*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.90*pi()))) )}
		#eval{vector(  0.95*$b,                                                    0,                -($R - 0.5*$a * (1 + cos(0.95*pi()))) )}

		#eval{vector(       $b,                                                    0,                                                  -$R )}
	)

	arc     0  3 origin (0 0 0)
	arc     1  4 origin #eval{vector(0.2*$b, 0, 0)}
	arc     2  5 origin #eval{vector(    $b, 0, 0)}

	spline  3  4
	(
		#eval{vector(        0,                                ($R - $a)*cos(pi()/4),                               -($R - $a)*sin(pi()/4) )}

		#eval{vector(  0.05*$b,     ($R - 0.5*$a * (1 + cos(0.05*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.05*pi())))*sin(pi()/4) )}
		#eval{vector(  0.10*$b,     ($R - 0.5*$a * (1 + cos(0.10*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.10*pi())))*sin(pi()/4) )}
		#eval{vector(  0.15*$b,     ($R - 0.5*$a * (1 + cos(0.15*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.15*pi())))*sin(pi()/4) )}

		#eval{vector(  0.20*$b,     ($R - 0.5*$a * (1 + cos(0.20*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.20*pi())))*sin(pi()/4) )}
	)
	spline  4  5
	(
		#eval{vector(  0.20*$b,     ($R - 0.5*$a * (1 + cos(0.20*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.20*pi())))*sin(pi()/4) )}

		#eval{vector(  0.25*$b,     ($R - 0.5*$a * (1 + cos(0.25*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.25*pi())))*sin(pi()/4) )}
		#eval{vector(  0.30*$b,     ($R - 0.5*$a * (1 + cos(0.30*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.30*pi())))*sin(pi()/4) )}
		#eval{vector(  0.35*$b,     ($R - 0.5*$a * (1 + cos(0.35*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.35*pi())))*sin(pi()/4) )}
		#eval{vector(  0.40*$b,     ($R - 0.5*$a * (1 + cos(0.40*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.40*pi())))*sin(pi()/4) )}
		#eval{vector(  0.45*$b,     ($R - 0.5*$a * (1 + cos(0.45*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.45*pi())))*sin(pi()/4) )}
		#eval{vector(  0.50*$b,     ($R - 0.5*$a * (1 + cos(0.50*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.50*pi())))*sin(pi()/4) )}
		#eval{vector(  0.55*$b,     ($R - 0.5*$a * (1 + cos(0.55*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.55*pi())))*sin(pi()/4) )}
		#eval{vector(  0.60*$b,     ($R - 0.5*$a * (1 + cos(0.60*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.60*pi())))*sin(pi()/4) )}
		#eval{vector(  0.65*$b,     ($R - 0.5*$a * (1 + cos(0.65*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.65*pi())))*sin(pi()/4) )}
		#eval{vector(  0.70*$b,     ($R - 0.5*$a * (1 + cos(0.70*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.70*pi())))*sin(pi()/4) )}
		#eval{vector(  0.75*$b,     ($R - 0.5*$a * (1 + cos(0.75*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.75*pi())))*sin(pi()/4) )}
		#eval{vector(  0.80*$b,     ($R - 0.5*$a * (1 + cos(0.80*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.80*pi())))*sin(pi()/4) )}
		#eval{vector(  0.85*$b,     ($R - 0.5*$a * (1 + cos(0.85*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.85*pi())))*sin(pi()/4) )}
		#eval{vector(  0.90*$b,     ($R - 0.5*$a * (1 + cos(0.90*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.90*pi())))*sin(pi()/4) )}
		#eval{vector(  0.95*$b,     ($R - 0.5*$a * (1 + cos(0.95*pi())))*cos(pi()/4),    -($R - 0.5*$a * (1 + cos(0.95*pi())))*sin(pi()/4) )}

		#eval{vector(       $b,                                       $R*cos(pi()/4),                                      -$R*sin(pi()/4) )}
	)

	line    0  6
	line    1  7
	line    2  8

	line    3  9
	line    4 10
	line    5 11

	spline  6  7
	(
		#eval{vector(        0,                                                    0,                                        -$H*($R - $a) )}

		#eval{vector(  0.05*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.05*pi()))) )}
		#eval{vector(  0.10*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.10*pi()))) )}
		#eval{vector(  0.15*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.15*pi()))) )}

		#eval{vector(  0.20*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.20*pi()))) )}
	)
	spline  7  8
	(
		#eval{vector(  0.20*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.20*pi()))) )}

		#eval{vector(  0.25*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.25*pi()))) )}
		#eval{vector(  0.30*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.30*pi()))) )}
		#eval{vector(  0.35*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.35*pi()))) )}
		#eval{vector(  0.40*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.40*pi()))) )}
		#eval{vector(  0.45*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.45*pi()))) )}
		#eval{vector(  0.50*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.50*pi()))) )}
		#eval{vector(  0.55*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.55*pi()))) )}
		#eval{vector(  0.60*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.60*pi()))) )}
		#eval{vector(  0.65*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.65*pi()))) )}
		#eval{vector(  0.70*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.70*pi()))) )}
		#eval{vector(  0.75*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.75*pi()))) )}
		#eval{vector(  0.80*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.80*pi()))) )}
		#eval{vector(  0.85*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.85*pi()))) )}
		#eval{vector(  0.90*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.90*pi()))) )}
		#eval{vector(  0.95*$b,                                                    0,             -$H*($R - 0.5*$a * (1 + cos(0.95*pi()))) )}

		#eval{vector(       $b,                                                    0,                                               -$H*$R )}
	)

	arc     9  6 #eval{vector(     0,                           -$h*($R - $a),                           -$h*($R - $a) )}
	arc    10  7 #eval{vector(0.2*$b, -$h*($R - 0.5*$a * (1 + cos(0.2*pi()))), -$h*($R - 0.5*$a * (1 + cos(0.2*pi()))) )}
	arc    11  8 #eval{vector(    $b,                                  -$h*$R,                                  -$h*$R )}

	spline  9 10
	(
		#eval{vector(        0,                                        $h*($R - $a),                                        -$h*($R - $a) )}

		#eval{vector(  0.05*$b,             $h*($R - 0.5*$a * (1 + cos(0.05*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.05*pi()))) )}
		#eval{vector(  0.10*$b,             $h*($R - 0.5*$a * (1 + cos(0.10*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.10*pi()))) )}
		#eval{vector(  0.15*$b,             $h*($R - 0.5*$a * (1 + cos(0.15*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.15*pi()))) )}

		#eval{vector(  0.20*$b,             $h*($R - 0.5*$a * (1 + cos(0.20*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.20*pi()))) )}
	)
	spline 10 11
	(
		#eval{vector(  0.20*$b,             $h*($R - 0.5*$a * (1 + cos(0.20*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.20*pi()))) )}

		#eval{vector(  0.25*$b,             $h*($R - 0.5*$a * (1 + cos(0.25*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.25*pi()))) )}
		#eval{vector(  0.30*$b,             $h*($R - 0.5*$a * (1 + cos(0.30*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.30*pi()))) )}
		#eval{vector(  0.35*$b,             $h*($R - 0.5*$a * (1 + cos(0.35*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.35*pi()))) )}
		#eval{vector(  0.40*$b,             $h*($R - 0.5*$a * (1 + cos(0.40*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.40*pi()))) )}
		#eval{vector(  0.45*$b,             $h*($R - 0.5*$a * (1 + cos(0.45*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.45*pi()))) )}
		#eval{vector(  0.50*$b,             $h*($R - 0.5*$a * (1 + cos(0.50*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.50*pi()))) )}
		#eval{vector(  0.55*$b,             $h*($R - 0.5*$a * (1 + cos(0.55*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.55*pi()))) )}
		#eval{vector(  0.60*$b,             $h*($R - 0.5*$a * (1 + cos(0.60*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.60*pi()))) )}
		#eval{vector(  0.65*$b,             $h*($R - 0.5*$a * (1 + cos(0.65*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.65*pi()))) )}
		#eval{vector(  0.70*$b,             $h*($R - 0.5*$a * (1 + cos(0.70*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.70*pi()))) )}
		#eval{vector(  0.75*$b,             $h*($R - 0.5*$a * (1 + cos(0.75*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.75*pi()))) )}
		#eval{vector(  0.80*$b,             $h*($R - 0.5*$a * (1 + cos(0.80*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.80*pi()))) )}
		#eval{vector(  0.85*$b,             $h*($R - 0.5*$a * (1 + cos(0.85*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.85*pi()))) )}
		#eval{vector(  0.90*$b,             $h*($R - 0.5*$a * (1 + cos(0.90*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.90*pi()))) )}
		#eval{vector(  0.95*$b,             $h*($R - 0.5*$a * (1 + cos(0.95*pi()))),             -$h*($R - 0.5*$a * (1 + cos(0.95*pi()))) )}
                                                                                    
		#eval{vector(       $b,                                               $h*$R,                                               -$h*$R )}
	)

	line    6 12
	line    7 13
	line    8 14

	arc     9 15 #eval{vector(     0,                            $h*($R - $a),                            $h*($R - $a) )}
	arc    10 16 #eval{vector(0.2*$b,  $h*($R - 0.5*$a * (1 + cos(0.2*pi()))),  $h*($R - 0.5*$a * (1 + cos(0.2*pi()))) )}
	arc    11 17 #eval{vector(    $b,                                   $h*$R,                                   $h*$R )}

	arc     3 18 origin (0 0 0)
	arc     4 19 origin #eval{vector(0.2*$b, 0, 0)}
	arc     5 20 origin #eval{vector(    $b, 0, 0)}

	line   12 13
	line   13 14

	line   12 15
	line   13 16
	line   14 17

	spline 15 16
	(
		#eval{vector(        0,                                        $H*($R - $a),                                                    0 )}

		#eval{vector(  0.05*$b,             $H*($R - 0.5*$a * (1 + cos(0.05*pi()))),                                                    0 )}
		#eval{vector(  0.10*$b,             $H*($R - 0.5*$a * (1 + cos(0.10*pi()))),                                                    0 )}
		#eval{vector(  0.15*$b,             $H*($R - 0.5*$a * (1 + cos(0.15*pi()))),                                                    0 )}

		#eval{vector(  0.20*$b,             $H*($R - 0.5*$a * (1 + cos(0.20*pi()))),                                                    0 )}
	)
	spline 16 17
	(
		#eval{vector(  0.20*$b,             $H*($R - 0.5*$a * (1 + cos(0.20*pi()))),                                                    0 )}

		#eval{vector(  0.25*$b,             $H*($R - 0.5*$a * (1 + cos(0.25*pi()))),                                                    0 )}
		#eval{vector(  0.30*$b,             $H*($R - 0.5*$a * (1 + cos(0.30*pi()))),                                                    0 )}
		#eval{vector(  0.35*$b,             $H*($R - 0.5*$a * (1 + cos(0.35*pi()))),                                                    0 )}
		#eval{vector(  0.40*$b,             $H*($R - 0.5*$a * (1 + cos(0.40*pi()))),                                                    0 )}
		#eval{vector(  0.45*$b,             $H*($R - 0.5*$a * (1 + cos(0.45*pi()))),                                                    0 )}
		#eval{vector(  0.50*$b,             $H*($R - 0.5*$a * (1 + cos(0.50*pi()))),                                                    0 )}
		#eval{vector(  0.55*$b,             $H*($R - 0.5*$a * (1 + cos(0.55*pi()))),                                                    0 )}
		#eval{vector(  0.60*$b,             $H*($R - 0.5*$a * (1 + cos(0.60*pi()))),                                                    0 )}
		#eval{vector(  0.65*$b,             $H*($R - 0.5*$a * (1 + cos(0.65*pi()))),                                                    0 )}
		#eval{vector(  0.70*$b,             $H*($R - 0.5*$a * (1 + cos(0.70*pi()))),                                                    0 )}
		#eval{vector(  0.75*$b,             $H*($R - 0.5*$a * (1 + cos(0.75*pi()))),                                                    0 )}
		#eval{vector(  0.80*$b,             $H*($R - 0.5*$a * (1 + cos(0.80*pi()))),                                                    0 )}
		#eval{vector(  0.85*$b,             $H*($R - 0.5*$a * (1 + cos(0.85*pi()))),                                                    0 )}
		#eval{vector(  0.90*$b,             $H*($R - 0.5*$a * (1 + cos(0.90*pi()))),                                                    0 )}
		#eval{vector(  0.95*$b,             $H*($R - 0.5*$a * (1 + cos(0.95*pi()))),                                                    0 )}

		#eval{vector(       $b,                                               $H*$R,                                                    0 )}
	)

	line   15 18
	line   16 19
	line   17 20

	spline 18 19
	(
		#eval{vector(        0,                                             $R - $a,                                                    0 )}

		#eval{vector(  0.05*$b,                  $R - 0.5*$a * (1 + cos(0.05*pi())),                                                    0 )}
		#eval{vector(  0.10*$b,                  $R - 0.5*$a * (1 + cos(0.10*pi())),                                                    0 )}
		#eval{vector(  0.15*$b,                  $R - 0.5*$a * (1 + cos(0.15*pi())),                                                    0 )}

		#eval{vector(  0.20*$b,                  $R - 0.5*$a * (1 + cos(0.20*pi())),                                                    0 )}
	)
	spline 19 20
	(
		#eval{vector(  0.20*$b,                  $R - 0.5*$a * (1 + cos(0.20*pi())),                                                    0 )}

		#eval{vector(  0.25*$b,                  $R - 0.5*$a * (1 + cos(0.25*pi())),                                                    0 )}
		#eval{vector(  0.30*$b,                  $R - 0.5*$a * (1 + cos(0.30*pi())),                                                    0 )}
		#eval{vector(  0.35*$b,                  $R - 0.5*$a * (1 + cos(0.35*pi())),                                                    0 )}
		#eval{vector(  0.40*$b,                  $R - 0.5*$a * (1 + cos(0.40*pi())),                                                    0 )}
		#eval{vector(  0.45*$b,                  $R - 0.5*$a * (1 + cos(0.45*pi())),                                                    0 )}
		#eval{vector(  0.50*$b,                  $R - 0.5*$a * (1 + cos(0.50*pi())),                                                    0 )}
		#eval{vector(  0.55*$b,                  $R - 0.5*$a * (1 + cos(0.55*pi())),                                                    0 )}
		#eval{vector(  0.60*$b,                  $R - 0.5*$a * (1 + cos(0.60*pi())),                                                    0 )}
		#eval{vector(  0.65*$b,                  $R - 0.5*$a * (1 + cos(0.65*pi())),                                                    0 )}
		#eval{vector(  0.70*$b,                  $R - 0.5*$a * (1 + cos(0.70*pi())),                                                    0 )}
		#eval{vector(  0.75*$b,                  $R - 0.5*$a * (1 + cos(0.75*pi())),                                                    0 )}
		#eval{vector(  0.80*$b,                  $R - 0.5*$a * (1 + cos(0.80*pi())),                                                    0 )}
		#eval{vector(  0.85*$b,                  $R - 0.5*$a * (1 + cos(0.85*pi())),                                                    0 )}
		#eval{vector(  0.90*$b,                  $R - 0.5*$a * (1 + cos(0.90*pi())),                                                    0 )}
		#eval{vector(  0.95*$b,                  $R - 0.5*$a * (1 + cos(0.95*pi())),                                                    0 )}

		#eval{vector(       $b,                                                  $R,                                                    0 )}
	)
);

boundary
(
	inlet
	{
		type	patch;
		faces
		(
			( 0  6  9  3)
			( 9 15 18  3)
			( 6 12 15  9)
		);
	}

	outlet
	{
		type	patch;
		faces
		(
			( 2  5 11  8)
			( 5 20 17 11)
			( 8 11 17 14)
		);
	}

//	wall.inlet
//	{
//		type	wall;
//		faces
//		(
//			( 3 9 11 7 )
//		);
//	}

	wall.stenosis
	{
		type	wall;
		faces
		(
			( 0  3  4  1)
			( 1  4  5  2)
			( 3 18 19  4)
			( 4 19 20  5)
		);
	}

//	wall.outlet
//	{
//		type	wall;
//		faces
//		(
//			( 2 6 15 13 )
//		);
//	}

	symmetry.y
	{
		type	symmetry;
		faces
		(
			( 0  1  7  6)
			( 1  2  8  7)
			( 6  7 13 12)
			( 7  8 14 13)
		);
	}

	symmetry.z
	{
		type	symmetry;
		faces
		(
			(12 13 16 15)
			(13 14 17 16)
			(15 16 19 18)
			(16 17 20 19)
		);
	}
);

mergePatchPairs
(
);

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#inputMode merge

// ************************************************************************* //
