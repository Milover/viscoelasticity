#!/bin/bash

# run from this directory
cd ${0%/*} || exit 1

# source helper functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# exit on error
set -e

#------------------------------------------------------------------------------

decompose()
{
	if [ -e system/tools/cellDecomposition ]; then
		ln -sfn tools/decomposeParDict.manual system/decomposeParDict
		runApplication -o decomposePar -latestTime -force
	else
		ln -sfn tools/decomposeParDict.auto system/decomposeParDict
		runApplication -o decomposePar -latestTime -force -cellDist
		mv constant/cellDecomposition system/tools/
	fi
}

mesh()
{
	# check the case type
	case_type=$(foamDictionary -entry case_type -value constant/caseSetup)

	if [ $case_type == '"3D"' ]; then
		runApplication -o blockMesh -dict "system/blockMeshDict"

		# mirror around yz-plane
		# revolve
	else
		runApplication -o blockMesh -dict "system/blockMeshDict"
	fi
}

make_paraview_file()
{
	local current_case="$(echo ${PWD##*/} | sed "s/case\.//")"
	touch "${current_case}.foam"
}

renumber()
{
	if [ -d processor0 ]; then
		runParallel -o renumberMesh -overwrite -latestTime
	else
		runApplication -o renumberMesh -overwrite -latestTime
	fi
}

preprocess()
{
	make_paraview_file
	mesh
}

#------------------------------------------------------------------------------

# get application and nproc
application=$(getApplication)

# clean
#./Allclean

# NOTE: due to write precision issues
# expand the controlDict
foamDictionary -precision 12 -expand system/.controlDict > system/controlDict

# reset
restore0Dir

#------------------------------------------------------------------------------

# preprocess
make_paraview_file
mesh
runApplication -o renumberMesh -overwrite -latestTime
runApplication -o $application
#decompose
#renumber

# run
#runParallel -o $application

# reconstruct
#runApplication -o reconstructPar -latestTime

#------------------------------------------------------------------------------
